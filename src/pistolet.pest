program = { SOI ~ sentence+ ~ EOI}

sentence = {
    (FUN | LET | WHILE | IF | RETURN)
}

TERM = {
    "{" ~
    (FUN | LET | WHILE | IF | RETURN)+
    ~ "}"
}

FUN_CALL = {
    FUN_NAME ~ "(" ~ EXPR_Noty_A ~ ("," ~ EXPR_Noty_A)* ~ ")"
}

EXPR_Noty_A = _{
    EXPR_NoTy | NONE
}

EXPR_NoTy = { 
    EXPR_NoTy_T ~ ((and | or | xor | add | sub | mul | div) ~ EXPR_NoTy_T)* 
}

EXPR_NoTy_T = _{ 
     ( ("(" ~ EXPR_NoTy ~ ")") | (BOOL_VALUE | VALUE) | EQ_EXPR )
}

EXPR_A = _{
    BOOL_EXPR | EXPR | NONE
}

NONE = {
    ""
}

BOOL_EXPR = { 
    BOOL_EXPR_T ~ ((and | or | xor) ~ BOOL_EXPR_T)* 
}

BOOL_EXPR_T = _{ 
     ( ("(" ~ BOOL_EXPR ~ ")") | BOOL_VALUE | EQ_EXPR )
}

EQ_EXPR = {
    EXPR ~ eq ~ EXPR
}

EXPR = { 
    EXPR_T ~ ((add | sub | mul | div) ~ EXPR_T)* 
}

BOOL_VALUE = {
    FUN_CALL | BOOL | VAR_NAME
}

VALUE = {
    FUN_CALL | FLOAT | INTEGER | VAR_NAME
}

EXPR_T = _{ 
    ("(" ~ EXPR ~ ")") | VALUE
}

PARA_LIST = {
 ("(" ~ VAR_BIND ~ ")")+
}

VAR_BIND = {
    VAR_NAME ~ ":" ~ TYPE_NAME
}

RETURN = {
    "return" ~ EXPR_Noty_A ~ "."
}

FUN = {
    "fun" ~ FUN_NAME ~ PARA_LIST ~ "->" ~ TYPE_NAME ~ TERM
}

LET = {
    "let" ~ VAR_NAME ~ ":" ~ TYPE_NAME ~ "=" ~ EXPR_A ~ "."
}

WHILE = {
    "while" ~ BOOL_EXPR ~ TERM
}

IF = {
   "if" ~ BOOL_EXPR ~ TERM ~ TERM
}

BOOL = { "true" | "false" }

alpha = { 'a'..'z' | 'A'..'Z' }

digit = { '0'..'9' }

int = @{ digit+ }

add = { "+" }

sub = { "-" }

mul = { "*" }   

div = { "/" }

and = { "&&" }

or = { "||" }   

xor = { "<|" }

eq = { "=?" }

FUN_NAME = @{ (alpha | "_") ~ (alpha | digit | "_")* }

TYPE_NAME = @{ (alpha | "_") ~ (alpha | digit | "_")* }

VAR_NAME = @{ (alpha | "_") ~ (alpha | digit | "_")* }

FLOAT = @{ ("-")? ~ int ~ ("." ~ int+) }

INTEGER = @{ ("-")? ~ int }

WHITESPACE = _{ " " | "\t" | "\r" | "\n" }

COMMENT = _{ "(*" ~ (!"*)" ~ ANY)* ~ "*)" }